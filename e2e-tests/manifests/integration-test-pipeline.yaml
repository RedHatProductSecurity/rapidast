---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: rapidast-e2e
spec:
  params:
    - name: repo_url
      default: github.com/sfowl/rapidast
    - name: revision
      default: "development"
    - name: image
      default: quay.io/redhatproductsecurity/rapidast:latest
    - description: 'Snapshot of the application'
      name: SNAPSHOT
      default: |-
          '{
            "components": [
              {
                "name":"rapidast",
                "containerImage": "quay.io/redhatproductsecurity/rapidast:latest",
                "source":{
                  "git":{
                    "url":"git@github.com:sfowl/rapidast.git",
                    "revision":"development",
                  }
                }
              }
            ]
          }'
      type: string

  tasks:
    - name: parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/integration-examples
          - name: revision
            value: main
          - name: pathInRepo
            value: tasks/test_metadata.yaml
      params:
        - name: SNAPSHOT
          value: $(params.SNAPSHOT)

    - name: provision-eaas-space
      runAfter:
        - parse-metadata
      taskRef:
        resolver: git
        params:
          - name: url
            value: https://github.com/konflux-ci/build-definitions.git
          - name: revision
            value: main
          - name: pathInRepo
            value: task/provision-env-with-ephemeral-namespace/0.1/provision-env-with-ephemeral-namespace.yaml
      params:
        - name: KONFLUXNAMESPACE
          value: $(context.pipelineRun.namespace)
        - name: PIPELINERUN_NAME
          value: $(context.pipelineRun.name)
        - name: PIPELINERUN_UID
          value: $(context.pipelineRun.uid)

    # - name: provision-cluster
    #   runAfter:
    #     - provision-eaas-space
    #   taskSpec:
    #     results:
    #       - name: clusterName
    #         value: "$(steps.create-cluster.results.clusterName)"
    #     volumes:
    #       - name: credentials
    #         emptyDir: {}
    #     steps:
    #       - name: get-supported-versions
    #         ref:
    #           resolver: git
    #           params:
    #             - name: url
    #               value: https://github.com/konflux-ci/build-definitions.git
    #             - name: revision
    #               value: main
    #             - name: pathInRepo
    #               value: stepactions/eaas-get-supported-ephemeral-cluster-versions/0.1/eaas-get-supported-ephemeral-cluster-versions.yaml
    #         params:
    #           - name: eaasSpaceSecretRef
    #             value: $(tasks.provision-eaas-space.results.secretRef)
    #       - name: pick-version
    #         ref:
    #           resolver: git
    #           params:
    #             - name: url
    #               value: https://github.com/konflux-ci/build-definitions.git
    #             - name: revision
    #               value: main
    #             - name: pathInRepo
    #               value: stepactions/eaas-get-latest-openshift-version-by-prefix/0.1/eaas-get-latest-openshift-version-by-prefix.yaml
    #         params:
    #           - name: prefix
    #             value: "$(steps.get-supported-versions.results.versions[0])."
    #       - name: create-cluster
    #         ref:
    #           resolver: git
    #           params:
    #             - name: url
    #               value: https://github.com/konflux-ci/build-definitions.git
    #             - name: revision
    #               value: main
    #             - name: pathInRepo
    #               value: stepactions/eaas-create-ephemeral-cluster-hypershift-aws/0.1/eaas-create-ephemeral-cluster-hypershift-aws.yaml
    #         params:
    #           - name: eaasSpaceSecretRef
    #             value: $(tasks.provision-eaas-space.results.secretRef)
    #           - name: version
    #             value: "$(steps.pick-version.results.version)"

    # XXX not supported to use workspaces in integration tests:
    # * https://issues.redhat.com/browse/STONEINTG-895
    #
    # - name: clone-repository
    #   runAfter:
    #     - parse-metadata
    #   params:
    #     - name: url
    #       value: "$(tasks.parse-metadata.results.source-git-url)"
    #     - name: revision
    #       value: "$(tasks.parse-metadata.results.source-git-revision)"
    #   taskRef:
    #     name: git-clone
    #   workspaces:
    #   - name: output
    #     workspace: source

    - name: run-e2e-tests
      runAfter:
        - provision-eaas-space
      taskSpec:
        volumes:
          - name: credentials
            emptyDir: {}
        results:
          - name: TEST_RESULTS
            description: e2e test results
        steps:
          # - name: get-kubeconfig
          #   ref:
          #     resolver: git
          #     params:
          #       - name: url
          #         value: https://github.com/konflux-ci/build-definitions.git
          #       - name: revision
          #         value: main
          #       - name: pathInRepo
          #         value: stepactions/eaas-get-ephemeral-cluster-credentials/0.1/eaas-get-ephemeral-cluster-credentials.yaml
          #   params:
          #     - name: eaasSpaceSecretRef
          #       value: $(tasks.provision-eaas-space.results.secretRef)
          #     - name: clusterName
          #       value: "$(tasks.provision-cluster.results.clusterName)"
          #     - name: credentials
          #       value: credentials


          # XXX not supported to use workspaces in integration tests:
          # * https://issues.redhat.com/browse/STONEINTG-895
          - name: clone-repository
            image: quay.io/konflux-ci/git-clone:latest
            script: |
              git config --global --add safe.directory /workspace
              git clone "$(tasks.parse-metadata.results.source-git-url)" /workspace
              pushd /workspace
              # git checkout "$(tasks.parse-metadata.results.source-git-revision)"
              # XXX Temporary hardcoded repo + commit !
              git checkout test-e2e-test

          - name: test
            image: registry.redhat.io/openshift4/ose-cli:latest
            env:
            - name: KUBECONFIG
              value: /tmp/kubeconfig
              # value: "/credentials/$(steps.get-kubeconfig.results.kubeconfig)"
            - name: KUBECONFIG_VALUE
              valueFrom:
                secretKeyRef:
                  name: $(tasks.provision-eaas-space.results.secretRef)
                  key: kubeconfig
            - name: RAPIDAST_CLEANUP
              value: "false" # namespace will be cleanedup automatically
            - name: RAPIDAST_IMAGE
              value: $(tasks.parse-metadata.results.component-container-image)
            - name: RAPIDAST_SERVICEACCOUNT
              value: namespace-manager # created by provision-env-with-ephemeral-namespace
            workingDir: /workspace
            volumeMounts:
              - name: credentials
                mountPath: /credentials
            script: |
              #!/bin/bash -ex
              
              echo "$KUBECONFIG_VALUE" > "$KUBECONFIG"
              oc whoami

              yum install -y python3.12
              python3.12 -m ensurepip
              pip3 install -r requirements.txt -r requirements-dev.txt
              pytest -s e2e-tests --json-report --json-report-summary --json-report-file $(results.TEST_RESULTS.path)
              cat $(results.TEST_RESULTS.path)
