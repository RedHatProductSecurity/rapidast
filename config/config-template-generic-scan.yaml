# This is a configuration template file to perform scans using user-defined container images or scripts
#
# Author: Red Hat Product Security

config:
  # WARNING: `configVersion` indicates the schema version of the config file.
  # This value tells RapiDAST what schema should be used to read this configuration.
  # Therefore you should only change it if you update the configuration to a newer schema
  # It is intended to keep backward compatibility (newer RapiDAST running an older config)
  configVersion: 5

  # (Optional) configure to export scan results to OWASP Defect Dojo
  #defectDojo:
    #url: "https://mydefectdojo.example.com/"
    # ssl: True|False|/path/to/CA/bundle (default: True). for SSL verification
    #ssl: True
    #authorization:
      #username: "rapidast"
      #password: "password"
        # or
      #token: "abc"

# `application` contains data related to the application, not to the scans.
application:
  shortName: "MyApp-1.0"

# `general` is a section that will be applied to all scanners.
general:
  container:
    # This configures what technology is to be used for RapiDAST to run each scanner.
    # Currently supported: `podman`  and `none`
    #   none: Default. RapiDAST runs each scanner in the same host or inside the RapiDAST image container
    #   podman: RapiDAST orchestrates each scanner on its own using podman
    # When undefined, relies on rapidast-defaults.yaml, or `none` if nothing is set
    type: "none"

# `scanners' is a section that configures scanning options
scanners:
  generic_1:
    # This is a generic scanner configuration, defined by the user
    # Multiple items can be defined with "generic_<random_str>" named

    # results:
    #   An absolute path to file or directory where results are stored on the host.
    #   if it is "*stdout" or unspecified, the command's standard output will be selected
    #   When container.type is 'podman', this needs to be used along with the container.volumes configuration below
    #   If the result needs to be sent to DefectDojo, this must be a SARIF format file
    #results: "/path/to/results"

    # this config is used when container.type is not 'podman'
    #toolDir: scanners/generic/tools
    inline: "<command to run>"

    # this config is only used when container.type is 'podman'
    #container:
      #parameters:
      # Mandatory: image name to run
      #image: "<container image name>"

      # Optional: command to run. By default, the image's ENTRYPOINT will be run
      #command: "<command to run in the container>"

      # Optional: inject into an existing Pod
      #podName: "mypod"

      # Optional: list of expected return codes, anything else will be considered as an error. by default: [0]
      #validReturns: [ 0, 1 ]

      # Optional: list of volume to mount, e.g.: to retrieve results on the host
      #volumes:
      #  - "<host/path>:<guest/path>:Z"   # for Linux
      #  - "<host/path>:<guest/path>"     # for Mac

    # (Optional) configure to export scan results to OWASP Defect Dojo.
    # `config.defectDojo` must be configured first.
    #defectDojoExport:
      #type: "reimport" # choose between: import, reimport, False (disable export). Default (or other content): re-import if test is set
      # Parameters contain data that will directly be sent as parameters to DefectDojo's import/reimport endpoints.
      # For example: commit tag, version, push_to_jira, etc.
      # See https://demo.defectdojo.org/api/v2/doc/ for a list of possibilities
      # The minimum set of data is whatever is needed to identify which engagement/test needs to be chosen.
      # If neither a test ID (`test` parameter), nor product_name and engagement_name were provided, sane default will be attempted:
      #   - product_name chosen from either application.productName or application.shortName
      #   - engagement_name:  "RapiDAST" [this way the same engagement will always be chosen, regardless of the scanner]
      #parameters:
        #product_name: "My Product"
        #engagement_name: "RapiDAST"
        # - or -
        #engagement: 3   # engagement ID
        # - or -
        #test_title: "generic"
        # - or -
        #test: 5       # test ID, that will force "reimport" mode

        # For additional options, see https://defectdojo.github.io/django-DefectDojo/integrations/importing/
